{"version":3,"file":"static/js/355.5e4e00b7.chunk.js","mappings":"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","sources":["webpack://social-network-demo/./src/components/Profile/Profile.module.css?b512","webpack://social-network-demo/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","webpack://social-network-demo/./src/components/common/Forms/ProfileFormData.module.css?c64c","components/common/Forms/ProfileFormData.jsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network-demo/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network-demo/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bannerImg\":\"Profile_bannerImg__9Hcnz\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__KYMFH\",\"name\":\"ProfileInfo_name__84RaV\",\"avatar\":\"ProfileInfo_avatar__CyhEO\",\"inputWrapper\":\"ProfileInfo_inputWrapper__zqGgn\",\"iconWrapper\":\"ProfileInfo_iconWrapper__VTrHE\",\"inputFileIcon\":\"ProfileInfo_inputFileIcon__g5Ty3\",\"inputFile\":\"ProfileInfo_inputFile__GgHQW\",\"editButton\":\"ProfileInfo_editButton__iGLQp\"};","import * as React from 'react'\r\nimport { updateUserStatus } from '../../../Redux/profileReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFromProfile } from '../../../Redux/selectors/profile-selectors'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatus = ({isOwner}) => {\r\n    const dispatch = useDispatch()\r\n    const statusFromProps = useSelector(state => getFromProfile.status(state))\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(statusFromProps)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(statusFromProps)\r\n    }, [statusFromProps])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        dispatch(updateUserStatus(status))\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !editMode\r\n                ? <span onDoubleClick={ activateEditMode }>\r\n                        { statusFromProps !== ''\r\n                            ? statusFromProps\r\n                            : 'Дважды кликните, чтобы установить статус' }\r\n                    </span>\r\n                : <input onChange={ onStatusChange } autoFocus={ true } value={ status }\r\n                         onBlur={ deactivateEditMode }/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","// extracted by mini-css-extract-plugin\nexport default {\"profileForm\":\"ProfileFormData_profileForm__Nv9WI\",\"saveButton\":\"ProfileFormData_saveButton__ruqhB\",\"error\":\"ProfileFormData_error__Uj5cr\"};","import { Field, Form } from 'react-final-form'\r\nimport classes from './ProfileFormData.module.css'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getFromProfile } from '../../../Redux/selectors/profile-selectors'\r\n\r\nexport const Error = ({meta}) => {\r\n    const error = useSelector(state => getFromProfile.error(state))\r\n    return (\r\n            <div className={ classes.error }>\r\n                { (meta.error && meta.touched &&\r\n                    <span>{ meta.error }</span>) ?? <span>{ error }</span> }\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileFormData = ({onSubmit}) => {\r\n    return (\r\n        <div>\r\n            <Form\r\n                onSubmit={ onSubmit }\r\n                initialValues={ {lookingForAJob: true} }\r\n                render={ ({handleSubmit}) => (\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <Field name={'fullName'}>\r\n                            {({input}) => (\r\n                                <div>\r\n                                    <span className={classes.profileForm}>Ваше имя: </span>\r\n                                    <span><input { ...input } type={ 'text' }/></span>\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name={'lookingForAJob'} type={'checkbox'}>\r\n                            {({input}) => (\r\n                                <div>\r\n                                    <span className={classes.profileForm}>Ищу работу:</span>\r\n                                    <span>\r\n                                    <input { ...input } id={ 'lookingForAJob' }\r\n                                           type={'checkbox'}/>\r\n                                    <label htmlFor='lookingForAJob'/>\r\n                                </span>\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name={'lookingForAJobDescription'}>\r\n                            {({input}) => (\r\n                                <div>\r\n                                    <span className={classes.profileForm}>Навыки: </span>\r\n                                    <span><input { ...input } type={'text'} placeholder={'Напишите о softSkills'} /></span>\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name={'aboutMe'}>\r\n                            {({input ,meta}) => (\r\n                                <div>\r\n                                    <span className={classes.profileForm}>Обо мне: </span>\r\n                                    <span><input {...input} type={'text'} placeholder={'Напишите о своем опыте'}/></span>\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <p>Контакты:</p>\r\n                        <ul>\r\n                            <Field name={'contacts.facebook'}>\r\n                                {({input ,meta}) => (\r\n                                    <div>\r\n                                        <Error meta={meta}/>\r\n                                        <li>\r\n                                            <span\r\n                                                className={ classes.profileForm }>facebook: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.website'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span className={ classes.profileForm }>website: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.vk'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span className={ classes.profileForm }>VK: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.twitter'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span className={ classes.profileForm }>twitter: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.instagram'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span\r\n                                                className={ classes.profileForm }>instagram: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.youtube'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span className={ classes.profileForm }>youtube: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.github'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span className={ classes.profileForm }>github: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                            <Field name={'contacts.mailLink'}>\r\n                                {({input }) => (\r\n                                    <div>\r\n                                        <li>\r\n                                            <span\r\n                                                className={ classes.profileForm }>mailLink: </span>\r\n                                            <span><input { ...input } type={ 'text' } /></span>\r\n                                        </li>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </ul>\r\n                        <Field name={'contacts.submit'}>\r\n                            {({}) => (\r\n                                <div>\r\n                                    <button\r\n                                        className={classes.saveButton}\r\n                                        type={'submit'}>Сохранить</button>\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                    </form>\r\n                ) }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileFormData","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import classes from './ProfileInfo.module.css'\r\nimport banner from '../../../img/profilebanner.png'\r\nimport avatar from './../.././../img/avatar.jpg'\r\nimport upload from './../../../img/upload.png'\r\nimport editable from './../../../img/edit.png'\r\nimport Preloader from '../../common/preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport { useDispatch } from 'react-redux'\r\nimport { savePhoto, updateProfileData } from '../../../Redux/profileReducer'\r\nimport ProfileFormData from '../../common/Forms/ProfileFormData'\r\nimport { useState } from 'react'\r\n\r\nconst ProfileInfo = ({profile, isOwner}) => {\r\n    const dispatch = useDispatch()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length){\r\n            dispatch(savePhoto(e.target.files[0]))\r\n        }\r\n    }\r\n    const editProfile = () => {\r\n        setEditMode(true)\r\n    }\r\n    const sendProfileData = (formData) => {\r\n        dispatch(updateProfileData(formData))\r\n            .then(() => {\r\n            setEditMode(false)\r\n        })\r\n\r\n    }\r\n\r\n    if (!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={ classes.descriptionBlock }>\r\n                <div>\r\n                    <img src={ banner } alt=\"banner\"/>\r\n                </div>\r\n                <div>\r\n                    <img className={ classes.avatar } src={ profile.photos.large ?? avatar }/>\r\n                    { isOwner\r\n                    && <div className={ classes.inputWrapper }>\r\n                        <input\r\n                            id=\"input__file\"\r\n                            className={ classes.inputFile }\r\n                            type=\"file\"\r\n                            onChange={ onPhotoSelected }\r\n                        />\r\n                        <label htmlFor=\"input__file\">\r\n                        <span title='Выберите аватарку' className={ classes.iconWrapper }><img\r\n                            className={ classes.inputFileIcon }\r\n                            src={ upload }\r\n                            alt=\"Выбрать файл\"\r\n                        />\r\n                        </span>\r\n                        </label>\r\n                    </div> }\r\n                </div>\r\n                <div>\r\n                    <b>Статус: </b>\r\n                    <i title={ 'Двойной клик, чтобы изменить статус' }><ProfileStatus isOwner={isOwner}/></i>\r\n                </div>\r\n            </div>\r\n            { isOwner && !editMode\r\n                ? <button onClick={ editProfile }\r\n                          title={ 'Редактировать профиль' }\r\n                          className={ classes.editButton }>Редактировать<img\r\n                    src={ editable } alt=\"редактирование\"/></button>\r\n                : null\r\n            }\r\n            { editMode\r\n                ? <ProfileFormData onSubmit={sendProfileData}/>\r\n                : <ProfileData profile={ profile }/> }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div>\r\n            <p className={ classes.name }>{ profile.fullName }</p>\r\n            <p>Ищу работу: { profile.lookingForAJob\r\n                ? <span>да</span>\r\n                : <span>нет</span> }\r\n            </p>\r\n            <p>Навыки: { profile.lookingForAJobDescription ?? 'Не указаны'\r\n            }</p>\r\n            <p>Обо мне: {profile.aboutMe ?? ''}</p>\r\n            <p>Контакты:</p>\r\n            <ul>\r\n                { Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <li><Contact key={ key }\r\n                                     contactTitle={ key }\r\n                                     contactValue={ profile.contacts[key] }/>\r\n                        </li>\r\n                    )\r\n                }) }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <>\r\n            { contactTitle }: { contactValue ?? 'нет' }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MyPosts_button__Oa1It\",\"postsBlock\":\"MyPosts_postsBlock__bmHab\",\"posts\":\"MyPosts_posts__CYkG+\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ARjY6\",\"likesWrapper\":\"Post_likesWrapper__YEAeo\",\"button\":\"Post_button__xAnDK\",\"like\":\"Post_like__XXwip\",\"post\":\"Post_post__XipTU\"};","import classes from './Post.module.css'\r\nimport avatar from './../../../../img/avatar.jpg'\r\nimport like from './../../../../img/like.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={ classes.item }>\r\n            <img src={ avatar } alt=\"avatar\"/>\r\n            <span className={ classes.post }>{ props.post }</span>\r\n            <div className={ classes.likesWrapper }>\r\n                <button className={ classes.button }>\r\n                    <img src={ like } alt=\"like\"/>\r\n                </button>\r\n                <span className={ classes.like }> { props.likes }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, Form } from 'react-final-form'\r\n\r\n\r\nconst MyPosts = ({isOwner, posts, addPost}) => {\r\n    let postsElements = posts.map(function (p) {\r\n        return <Post post={ p.post } likes={ p.likesCount } key={ p.id }/>\r\n    })\r\n\r\n    let addNewPost = (formData) => {\r\n        addPost(formData.post)\r\n        formData.post = ''\r\n    }\r\n    return (\r\n        <div className={ classes.postsBlock }>\r\n            { isOwner\r\n                ? <div>\r\n                    <PostForm onSubmit={ addNewPost }/>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            <div className={ classes.posts }>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst PostForm = ({onSubmit}) => {\r\n    return (\r\n        <Form onSubmit={ onSubmit }\r\n              render={ ({handleSubmit, submitting, pristine}) => (\r\n                  <form onSubmit={ handleSubmit }>\r\n                      <div>\r\n                          <Field\r\n                              placeholder={ 'Поделитесь чем-нибудь:' }\r\n                              name={ 'post' }\r\n                              component={ 'textarea' }\r\n                              cols=\"30\"\r\n                              rows=\"5\"/>\r\n                      </div>\r\n                      <div>\r\n                          <button\r\n                              type={ 'submit' }\r\n                              disabled={ submitting || pristine }\r\n                              className={ classes.button }>Добавить пост\r\n                          </button>\r\n                      </div>\r\n                  </form>\r\n              ) }\r\n        >\r\n        </Form>\r\n    )\r\n}\r\nexport default MyPosts\r\n","import MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../../Redux/profileReducer'\r\nimport { getFromProfile } from '../../../Redux/selectors/profile-selectors'\r\n\r\nconst MyPostsContainer = ({isOwner,posts}) => {\r\n    return(\r\n        <MyPosts\r\n            isOwner={isOwner}\r\n            posts={posts}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: getFromProfile.postsData(state),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPostsContainer)\r\n\r\n\r\n","import classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = ({profile,isOwner}) => {\r\n    return (\r\n        <div className={ classes.profileWrapper }>\r\n            <ProfileInfo\r\n                profile={profile}\r\n                isOwner={isOwner}\r\n            />\r\n            <MyPostsContainer isOwner={isOwner}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import Profile from './Profile'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserProfile, getUserStatus } from '../../Redux/profileReducer'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport * as React from 'react'\r\nimport { useLayoutEffect } from 'react'\r\nimport { getFromAuth, getFromProfile } from '../../Redux/selectors/profile-selectors'\r\n\r\n\r\nconst ProfileContainer = () => {\r\n    const profile = useSelector(state => getFromProfile.profile(state))\r\n    const currentUserId = useSelector(state => getFromProfile.userId(state))\r\n    const authedUserId = useSelector(state => getFromAuth.authUserId(state))\r\n    const isOwner = currentUserId === authedUserId\r\n    let match = useRouteMatch()\r\n    let userId = match.params.userId\r\n    if (!userId){\r\n        userId = authedUserId\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(getUserProfile(userId))\r\n        dispatch(getUserStatus(userId))\r\n    }, [dispatch, userId])\r\n    return (\r\n        <Profile\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n        />\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"names":["isOwner","dispatch","useDispatch","statusFromProps","useSelector","state","getFromProfile","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","onDoubleClick","Error","meta","error","className","classes","touched","onSubmit","initialValues","lookingForAJob","render","handleSubmit","name","input","type","id","htmlFor","placeholder","obj","TypeError","ProfileData","profile","fullName","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","src","banner","alt","photos","large","avatar","target","files","length","savePhoto","title","upload","onClick","editable","formData","updateProfileData","then","Preloader","props","post","likes","PostForm","submitting","pristine","component","cols","rows","disabled","posts","addPost","postsElements","p","likesCount","connect","compose","withAuthRedirect","currentUserId","authedUserId","getFromAuth","userId","useRouteMatch","params","useLayoutEffect","getUserProfile","getUserStatus"],"sourceRoot":""}