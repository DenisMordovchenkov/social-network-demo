{"version":3,"file":"static/js/823.6421d129.chunk.js","mappings":"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","sources":["webpack://social-network-demo/./src/components/Profile/Profile.module.css?b512","webpack://social-network-demo/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network-demo/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network-demo/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bannerImg\":\"Profile_bannerImg__9Hcnz\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__KYMFH\",\"name\":\"ProfileInfo_name__84RaV\",\"avatar\":\"ProfileInfo_avatar__CyhEO\"};","import * as React from 'react'\r\nimport { updateUserStatus } from '../../../Redux/profileReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFromProfile } from '../../../Redux/selectors/profile-selectors'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatus = () => {\r\n    const dispatch = useDispatch()\r\n    const statusFromProps = useSelector(state => getFromProfile.status(state))\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(statusFromProps)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(statusFromProps)\r\n    }, [statusFromProps])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        dispatch(updateUserStatus(status))\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode\r\n                ? <div><span onDoubleClick={ activateEditMode }>\r\n                        { statusFromProps !== ''\r\n                            ? statusFromProps\r\n                            : 'Дважды кликните, чтобы установить статус' }\r\n                    </span></div>\r\n                : <div>\r\n                    <input onChange={ onStatusChange } autoFocus={ true } value={ status }\r\n                           onBlur={ deactivateEditMode }/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import classes from './ProfileInfo.module.css'\r\nimport banner from '../../../img/profilebanner.png'\r\nimport avatar from './../.././../img/avatar.jpg'\r\nimport Preloader from '../../common/preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nexport const ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={ classes.profileinfo }>\r\n\r\n            <div className={ classes.descriptionBlock }>\r\n                <div>\r\n                    <img className={ classes.bannerImg } src={ banner } alt=\"banner\"/>\r\n                </div>\r\n                <p className={ classes.name }>{ props.profile.fullName }</p>\r\n\r\n                <img className={ classes.avatar } src={ props.profile.photos.large ?? avatar }/>\r\n\r\n                <ProfileStatus/>\r\n                <div className={ classes.description }>\r\n                    <p>Ищу работу: { props.profile.lookingForAJob\r\n                        ? <span>да</span>\r\n                        : <span>нет</span> }\r\n                    </p>\r\n                    <p>Навыки: { props.profile.lookingForAJobDescription ?? 'Не указаны'\r\n                    }</p>\r\n                    <p>Контакты:</p>\r\n                    { props.profile.contacts\r\n                        ? <ul>\r\n                            <li>Github: { props.profile.contacts.github ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>VK: { props.profile.contacts.vk ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>Facebook: { props.profile.contacts.facebook ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>Instagram: { props.profile.contacts.instagram ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>Twitter: { props.profile.contacts.twitter ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>Website: { props.profile.contacts.website ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>Youtube: { props.profile.contacts.youtube ?? <span>нет</span> }\r\n                            </li>\r\n                            <li>Mail: { props.profile.contacts.mailLink ?? <span>нет</span> }\r\n                            </li>\r\n                        </ul>\r\n                        : 'Не удалось получить контактную информацию :-('\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MyPosts_button__Oa1It\",\"postsBlock\":\"MyPosts_postsBlock__bmHab\",\"posts\":\"MyPosts_posts__CYkG+\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ARjY6\",\"likesWrapper\":\"Post_likesWrapper__YEAeo\",\"button\":\"Post_button__xAnDK\",\"like\":\"Post_like__XXwip\",\"post\":\"Post_post__XipTU\"};","import classes from './Post.module.css'\r\nimport avatar from './../../../../img/avatar.jpg'\r\nimport like from './../../../../img/like.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={ classes.item }>\r\n            <img src={ avatar } alt=\"avatar\"/>\r\n            <span className={ classes.post }>{ props.post }</span>\r\n            <div className={ classes.likesWrapper }>\r\n                <button className={ classes.button }>\r\n                    <img src={ like } alt=\"like\"/>\r\n                </button>\r\n                <span className={ classes.like }> { props.likes }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, Form } from 'react-final-form'\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(function (p) {\r\n        return <Post post={ p.post } likes={ p.likesCount } key={ p.id }/>\r\n    })\r\n\r\n    let addNewPost = (formData) => {\r\n        props.addPost(formData.post)\r\n        formData.post = ''\r\n    }\r\n    return (\r\n        <div className={ classes.postsBlock }>\r\n            <span>Мои посты: </span>\r\n            <div>\r\n                <PostForm onSubmit={ addNewPost }/>\r\n            </div>\r\n            <div className={ classes.posts }>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst PostForm = (props) => {\r\n    return (\r\n        <Form onSubmit={ props.onSubmit }\r\n              render={ ({handleSubmit, submitting, pristine}) => (\r\n                  <form onSubmit={ handleSubmit }>\r\n                      <div>\r\n                          <Field\r\n                              placeholder={ 'Поделитесь чем-нибудь:' }\r\n                              name={ 'post' }\r\n                              component={ 'textarea' }\r\n                              cols=\"30\"\r\n                              rows=\"5\"/>\r\n                      </div>\r\n                      <div>\r\n                          <button\r\n                              type={ 'submit' }\r\n                              disabled={ submitting || pristine }\r\n                              className={ classes.button }>Добавить пост\r\n                          </button>\r\n                      </div>\r\n                  </form>\r\n              ) }\r\n        >\r\n        </Form>\r\n    )\r\n}\r\nexport default MyPosts\r\n","import MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../../Redux/profileReducer'\r\nimport { getFromProfile } from '../../../Redux/selectors/profile-selectors'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: getFromProfile.postsData(state),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\n\r\n","import classes from './Profile.module.css'\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={ classes.profileWrapper }>\r\n            <ProfileInfo\r\n                profile={ props.profilePage.profile }\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import Profile from './Profile'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { getUserProfile, getUserStatus } from '../../Redux/profileReducer'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport * as React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { getFromAuth, getFromProfile } from '../../Redux/selectors/profile-selectors'\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n    const match = useRouteMatch()\r\n    let userId = match.params.userId\r\n    if (!userId){\r\n        userId = props.authorisedUserId\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getUserProfile(userId))\r\n        dispatch(getUserStatus(userId))\r\n    }, [dispatch, userId])\r\n    return (\r\n        <Profile { ...props }/>\r\n    )\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: getFromProfile.profilePage(state),\r\n        authorisedUserId: getFromAuth.authUserId(state),\r\n        isAuth: getFromAuth.isAuth(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"names":["dispatch","useDispatch","statusFromProps","useSelector","state","getFromProfile","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","onDoubleClick","ProfileInfo","props","profile","className","classes","src","banner","alt","fullName","photos","large","avatar","lookingForAJob","lookingForAJobDescription","contacts","github","vk","facebook","instagram","twitter","website","youtube","mailLink","Preloader","post","likes","PostForm","onSubmit","render","handleSubmit","submitting","pristine","placeholder","name","component","cols","rows","type","disabled","postsElements","posts","map","p","likesCount","id","formData","addPost","connect","MyPosts","profilePage","MyPostsContainer","compose","authorisedUserId","getFromAuth","isAuth","withAuthRedirect","userId","useRouteMatch","params","getUserProfile","getUserStatus"],"sourceRoot":""}