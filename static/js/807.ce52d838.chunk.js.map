{"version":3,"file":"static/js/807.ce52d838.chunk.js","mappings":"iOACA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,gBAAkB,iCAAiC,SAAW,0BAA0B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,cAAgB,gC,uCCmBvW,EAdmBA,EAAAA,MAAW,SAAAC,GAC1BC,QAAQC,IAAI,cACZ,IAAIC,EAAI,iBAAcH,EAAMI,IAC5B,OACI,gBAAKC,UAAYC,EAAAA,OAAiB,IAAMA,EAAAA,OAAxC,UACI,iBAAKD,UAAYC,EAAAA,gBAAjB,WACI,gBAAKD,UAAYC,EAAAA,OAAiBC,IAAMC,EAASC,IAAI,YAErD,UAAC,KAAD,CAASC,GAAKP,EAAOE,UAAYC,EAAAA,SAAjC,cAAuDN,EAAMW,oBCA7E,EAZgB,SAACX,GACb,OACI,0BACI,gBAAKK,UAAYC,EAAAA,QAAjB,SACMN,EAAMY,a,oBC+BlBC,EAAc,SAACb,GACjB,OACI,SAAC,KAAD,CACIc,SAAWd,EAAMc,SACjBC,OAAS,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,SAA5B,OACL,kBAAMJ,SAAWE,EAAjB,WACI,0BACI,SAAC,KAAD,CAAOX,UAAYC,EAAAA,SACZa,YAAc,qGACdC,KAAO,UACPC,UAAY,WACZC,KAAK,KACLC,KAAK,SAEhB,0BACI,mBACIC,KAAO,SACPC,SAAWR,GAAcC,EACzBb,UAAYC,EAAAA,OAHhB,6EAYxB,EAzDgB,SAACN,GAEb,IAAI0B,EAAkB1B,EAAM2B,YAAYC,KAAI,SAAUC,GAClD,OAAO,SAAC,EAAD,CAAyBlB,SAAWkB,EAAElB,SAAWP,GAAKyB,EAAEzB,IAAtCyB,EAAEzB,OAG3B0B,EAAmB9B,EAAM+B,aAAaH,KAAI,SAAUI,GACpD,OAAO,SAAC,EAAD,CAAsBpB,QAAUoB,EAAEpB,QAAUR,GAAK4B,EAAE5B,IAApC4B,EAAE5B,OAQ5B,OAAKJ,EAAMiC,QAIP,iBAAK5B,UAAYC,EAAAA,QAAjB,WACI,gBAAKD,UAAYC,EAAAA,YAAjB,SACMoB,KAEN,iBAAKrB,UAAYC,EAAAA,cAAjB,UACMwB,GACF,SAACjB,EAAD,CAAaC,SAfL,SAACoB,GACjBlC,EAAMmC,WAAWD,EAAStB,SAC1BsB,EAAStB,QAAU,aAIZ,SAAC,KAAD,CAAUF,GAAG,Y,uCCvBf0B,EAAiB,SACdC,GACR,OAAOA,EAAMC,YAAYX,aAFpBS,EAAiB,SAIbC,GACT,OAAOA,EAAMC,YAAYP,cCI3BQ,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAOD,OAPCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACF,WACI,OACI,SAAC,GAAD,UACSC,KAAKxC,YAGrB,EAPCuC,CAAyBxC,EAAAA,WAkB/B,GAAe0C,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACL,GACnB,MAAO,CACHV,YAAaS,EAA2BC,GACxCN,aAAcK,EAA4BC,MAKrB,CAACF,WAAAA,EAAAA,IAC1BQ,EAAAA,EAFJ,CAGEJ","sources":["webpack://social-network-demo/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","Redux/selectors/dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__JUv8b\",\"dialog\":\"Dialogs_dialog__pSuzw\",\"active\":\"Dialogs_active__447nj\",\"message\":\"Dialogs_message__nPUPu\",\"nicknameWrapper\":\"Dialogs_nicknameWrapper__w6iqd\",\"nickname\":\"Dialogs_nickname__aQrhE\",\"avatar\":\"Dialogs_avatar__eOYyG\",\"textarea\":\"Dialogs_textarea__PeVsu\",\"button\":\"Dialogs_button__gHyUD\",\"messagesBlock\":\"Dialogs_messagesBlock__BRwYh\"};","import classes from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport avatar from '../../../img/avatar.jpg'\r\nimport * as React from 'react'\r\n\r\n\r\nconst DialogItem = React.memo(props => {\r\n    console.log('DialogItem')\r\n    let path = `dialog/${ props.id }`\r\n    return (\r\n        <div className={ classes.dialog + ' ' + classes.active }>\r\n            <div className={ classes.nicknameWrapper }>\r\n                <img className={ classes.avatar } src={ avatar } alt=\"avatar\"/>\r\n\r\n                <NavLink to={ path } className={ classes.nickname }> { props.nickname }</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default DialogItem","import classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={ classes.message }>\r\n                { props.message }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import classes from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport * as React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, Form } from 'react-final-form'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map(function (d) {\r\n        return <DialogItem key={ d.id } nickname={ d.nickname } id={ d.id }/>\r\n    })\r\n\r\n    let messagesElements = props.messagesData.map(function (m) {\r\n        return <Message key={ m.id } message={ m.message } id={ m.id }/>\r\n    })\r\n\r\n    let addNewMessage = (formData) => {\r\n        props.addMessage(formData.message)\r\n        formData.message = ''\r\n    }\r\n\r\n    if (!props.isAuth){\r\n        return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n        <div className={ classes.dialogs }>\r\n            <div className={ classes.dialogItems }>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={ classes.messagesBlock }>\r\n                { messagesElements }\r\n                <MessageForm onSubmit={ addNewMessage }/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={ props.onSubmit }\r\n            render={ ({handleSubmit, submitting, pristine}) => (\r\n                <form onSubmit={ handleSubmit }>\r\n                    <div>\r\n                        <Field className={ classes.textarea }\r\n                               placeholder={ 'Введите сообщение:' }\r\n                               name={ 'message' }\r\n                               component={ 'textarea' }\r\n                               cols=\"30\"\r\n                               rows=\"5\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            type={ 'submit' }\r\n                            disabled={ submitting || pristine }\r\n                            className={ classes.button }>Отправить\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            ) }\r\n        >\r\n        </Form>\r\n    )\r\n}\r\nexport default Dialogs\r\n","export const getFromDialogs = {\r\n    dialogsData(state) {\r\n        return state.dialogsPage.dialogsData\r\n    },\r\n    messagesData(state) {\r\n        return state.dialogsPage.messagesData\r\n    }\r\n}","import Dialogs from './Dialogs'\r\nimport { addMessage } from '../../Redux/dialogsReducer'\r\nimport { connect } from 'react-redux'\r\nimport * as React from 'react'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport { getFromDialogs } from '../../Redux/selectors/dialogs-selectors'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Dialogs\r\n                { ...this.props }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: getFromDialogs.dialogsData(state),\r\n        messagesData: getFromDialogs.messagesData(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(DialogsContainer)\r\n\r\n/*\r\n let AuthRedirectComponent = withAuthRedirect(DialogsContainer)\r\n\r\n\r\n export default connect(mapStateToProps, {addMessage, updateMessage})(AuthRedirectComponent);*/\r\n"],"names":["React","props","console","log","path","id","className","classes","src","avatar","alt","to","nickname","message","MessageForm","onSubmit","render","handleSubmit","submitting","pristine","placeholder","name","component","cols","rows","type","disabled","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","isAuth","formData","addMessage","getFromDialogs","state","dialogsPage","DialogsContainer","this","compose","connect","withAuthRedirect"],"sourceRoot":""}